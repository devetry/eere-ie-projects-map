{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/client/js/app.es6.js","src/client/js/geojson.min.js","src/client/js/spider.es6.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_spiderEs","_interopRequireDefault","_geojsonMin","obj","__esModule","default","map","datatable","data","spiderifier","config","googlekey","url","qstring","uiFilters","State","Technology","Category","mapCenter","mapZoom","mapboxToken","tileLayer","mapContainer","datatableContainer","dataHeaders","render","googledata","cfg","forEach","row","Project","concat","Link","dataarray","$ui","$","uiObj","Object","keys","title","result","sort","filter","b","indexOf","find","each","idx","el","src","uiobj","tmplSrc","target","append","html","Handlebars","compile","template","buildUI","mapboxgl","accessToken","Map","container","style","center","zoom","maxZoom","customPin","initializeLeg","spiderLeg","$spiderPinCustom","class","marker","feature","elements","pin","css","width","height","margin-left","margin-top","background-color","border-radius","content","Tribe","popup","Popup","closeOnClick","offset","popupOffsetForSpiderLeg","addTo","setHTML","mapboxMarker","setPopup","getFilterValues","on","geojsondata","parse","Point","addSource","type","cluster","clusterMaxZoom","clusterRadius","addLayer","id","source","paint","circle-color","circle-radius","layout","text-field","text-font","text-size","unspiderfy","features","feat","filters","bln","props","needles","haystack","properties","split","some","option","console","log","getSource","setData","bounds","LngLatBounds","extend","geometry","coordinates","fitBounds","padding","easeTo","alert","zoomMapBounds","updateSource","regexterms","val","replace","join","column","search","draw","originalEvent","srcElement","className","queryRenderedFeatures","point","layers","clusterId","cluster_id","getClusterExpansionZoom","err","getZoom","getClusterLeaves","leafFeatures","error","markers","leafFeature","spiderfy","slice","Math","abs","lngLat","lng","setLngLat","renderMapMarkers","state","count","text","countMarkersFromState","columns","header","dom","DataTable","language","renderDataTable","$el","value","push","window","onload","Tabletop","init","key","callback","simpleSheet","preventDefault","pos","delegateTarget","children","loc","reverse","./geojson.min.js","./spider.es6.js","2","_typeof","Symbol","iterator","constructor","prototype","d","geom","hasOwnProperty","j","k","Array","isArray","g","h","exclude","include","_b","this","_b2","extra","version","defaults","l","crs","name","bbox","extraGlobal","GeoJSON","3","MapboxglSpiderifier","userOptions","util","eachFn","array","item","mapTimes","eachTimesFn","eachTimes","NULL_FUNCTION","options","animate","animationSpeed","onClick","circleSpiralSwitchover","circleFootSeparation","spiralFootSeparation","spiralLengthStart","spiralLengthFactor","twoPi","PI","previousSpiderLegs","attrname","index","setTimeout","remove","latLng","spiderLegs","spiderLegParams","legLength","angle","pt","x","cos","y","sin","generateSpiralParams","angleStep","generateCircleParams","spiderLegParam","containerElem","document","createElement","pinElem","lineElem","appendChild","transform","line","createMarkerElements","Marker","param","onclick","offsetVariant","variantX","variantY","defineProperty","pinOffsetX","pinOffsetY","top","top-left","top-right","bottom","bottom-left","bottom-right","left","right"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"// var MapboxglSpiderifier = require('./spider.es6.js')\nimport MapboxglSpiderifier from './spider.es6.js';\nimport GeoJSON from './geojson.min.js';\n(() => {\n  \"use strict\";\n  \n  const config = {\n    googlekey: \"1PeYaVWqSWABu6kWKI3VF48_iL-YLAyFJIo9j8Hnx73Y\",\n    url: \"https://docs.google.com/spreadsheet/pub\",\n    qstring: \"?hl=en_US&hl=en_US&output=html&key=\",\n    uiFilters: { State: [], Technology: [], Category: [] },\n    mapCenter: [-95.84, 37.81],\n    mapZoom: 3,\n    mapboxToken:\n      \"pk.eyJ1IjoibnJlbCIsImEiOiJNOTcxYUhZIn0.Jc7TB_G2VQYs9e0S2laKcw\",\n    tileLayer: \"mapbox://styles/energy/ckhc7eaqv0mjm19p3yr4jtlcw\",\n    mapContainer: \"map\",\n    datatableContainer: \"datatable\",\n    dataHeaders: [\n      \"Project\",\n      \"Tribe\",\n      \"State\",\n      \"Year\",\n      \"Assistance Type\",\n      \"Category\",\n      \"Technology\",\n    ],\n  };\n\n  let map, datatable, data, spiderifier;\n\n  window.onload = function () {\n    init(config);\n  };\n\n  function init(cfg) {\n    Tabletop.init({\n      key: cfg.url + cfg.qstring + cfg.googlekey,\n      callback: render,\n      simpleSheet: true,\n    });\n  }\n\n  function render(googledata /*, tabletop */) {\n    data = googledata; // make the data global\n\n    linkTitle(data); // mashup the project name and hyperlink\n    buildUI(data);\n    renderMap(config);\n    getFilterValues(config);\n    renderMapMarkers(data);\n    countMarkersFromState(\"Alaska\", data);\n    renderDataTable(data);\n  }\n\n  function buildHtmlTemplates(src, uiobj) {\n    let tmplSrc = $(\"script\")\n      .filter('[data-template=\"' + src + '\"]')\n      .html();\n\n    let template = Handlebars.compile(tmplSrc);\n\n    return template(uiobj);\n  }\n\n  /**\n   *\n   * buildUI - build the inputs/selects/checkboxes used to control the map and table\n   * @param  {array} data rows from the datasource\n   *\n   */\n  function buildUI(dataarray) {\n    const $ui = $(\"#ui-controls\");\n    let uiObj = {};\n\n    // todo: refactor - this is not efficient... relooping thru data\n    Object.keys(config.uiFilters).forEach((title) => {\n      uiObj[title] = dataarray\n        .map((result) => result[title])\n        .sort()\n        .filter((a, b, c) => c.indexOf(a) === b); // grab unique items\n    });\n\n    $ui.find(\"[data-target]\").each((idx, el) => {\n      let target = $(el).data().target;\n\n      $(el).append(buildHtmlTemplates(target, uiObj));\n    });\n  }\n\n  /**\n   * Wrap the project name in a hyperlink\n   *\n   * @param  {array} data - rows from datasource\n   *\n   */\n  function linkTitle(dataarray) {\n    dataarray.forEach((row) => {\n      row.Project = `<a target=\"_blank\" href=\"${row.Link}\">${row.Project}</a>`;\n    });\n  }\n\n  /**\n   * todo: if one of our headers isn't in the data, prune it so DT doesn't throw an error\n   * [renderDataTable description]\n   * @param  {[type]} data [description]\n   */\n  function renderDataTable(dataarray) {\n    // set up columns properly\n    const columns = config.dataHeaders.map((header) => {\n      return {\n        title: header,\n        data: header,\n      };\n    });\n\n    // swap footer UI element placement\n    const dom =\n      '<\"row\"<\"col-sm-6\"l><\"col-sm-6\"f>>' +\n      '<\"row\"<\"col-sm-12\"tr>>' +\n      '<\"row\"<\"col-sm-5\"p><\"col-sm-7\"i>>';\n\n    // init the datatable\n    datatable = $(\"#\" + config.datatableContainer).DataTable({\n      data: dataarray,\n      columns: columns,\n      dom: dom,\n      language: { search: \"Search table:\" },\n    });\n  }\n\n  /**\n   *\n   * renderMap - set the zoom, coords, tiles, and create a mapbox map\n   * @return {[type]} [description]\n   *\n   */\n  function renderMap(cfg) {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibnJlbC1jb21hcHMiLCJhIjoiY2pveGNkcmFrMjdjeDNwcGR4cTF3c3ZhZiJ9.zrGPMAY7OCtiwuSXTWv0fQ\";\n    map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: cfg.mapCenter,\n      zoom: cfg.mapZoom,\n      maxZoom: 13,\n    });\n\n    spiderifier = new MapboxglSpiderifier(map, {\n      customPin: true,\n      initializeLeg: function (spiderLeg) {\n        let $spiderPinCustom = $(\"<div>\", { class: \"spider-point-circle\" });\n        let marker = spiderLeg.feature;\n\n        $(spiderLeg.elements.pin).append($spiderPinCustom);\n        $spiderPinCustom.css({\n          width: \"30px\",\n          height: \"30px\",\n          \"margin-left\": \"-15px\",\n          \"margin-top\": \"-15px\",\n          \"background-color\": \"rgba(8, 183, 241, 1)\",\n          \"border-radius\": \"50%\",\n        });\n        let content = \"<h4>\" + marker.Tribe + \"</h4>\";\n        content += \"<h5>\" + marker.Project + \"</h5>\";\n        let popup = new mapboxgl.Popup({\n          closeOnClick: true,\n          offset: MapboxglSpiderifier.popupOffsetForSpiderLeg(spiderLeg),\n        }).addTo(map);\n        popup.setHTML(content);\n        spiderLeg.mapboxMarker.setPopup(popup);\n      },\n    });\n  }\n\n  /**\n   *\n   * getFilterValues - check the state of our UI elements\n   *\n   */\n  function getFilterValues(cfg) {\n    Object.keys(cfg.uiFilters).forEach((filter) => {\n      const $el = $('#ui-controls [data-target=\"' + filter + '\"] :checked');\n\n      cfg.uiFilters[filter].length = 0; // clear out existing array\n\n      $el.each((idx, el) => {\n        if (el.value.length) {\n          cfg.uiFilters[filter].push(el.value);\n        }\n      });\n    });\n  }\n\n  /**\n   *\n   * renderMapMarkers -\n   * @param  {array} data -\n   *\n   */\n\n  function updateSource(dataarray) {\n    let geojsondata = GeoJSON.parse(dataarray, {\n      Point: [\"Latitude\", \"Longitude\"],\n    }); //todo: abstract out lat/lon field\n\n    geojsondata.features = geojsondata.features.filter((feat) =>\n      filterData(feat, config.uiFilters)\n    );\n    console.log(geojsondata.features);\n\n    map.getSource(\"locations\").setData(geojsondata);\n    zoomMapBounds(geojsondata.features, config);\n  }\n\n  function renderMapMarkers(dataarray) {\n    let $ui = $(\"#ui-controls\");\n\n    map.on(\"load\", function () {\n      let geojsondata = GeoJSON.parse(dataarray, {\n        Point: [\"Latitude\", \"Longitude\"],\n      }); //todo: abstract out lat/lon field\n\n      map.addSource(\"locations\", {\n        type: \"geojson\",\n        data: geojsondata,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n      });\n\n      map.addLayer({\n        id: \"clusters\",\n        type: \"circle\",\n        source: \"locations\",\n        filter: [\"has\", \"point_count\"],\n        paint: {\n          \"circle-color\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            \"rgba(8, 183, 241, 1)\",\n            10,\n            \"rgba(255, 201, 86, 1)\",\n            50,\n            \"rgba(232, 131, 32, 1)\",\n          ],\n          \"circle-radius\": 20,\n        },\n      });\n\n      map.addLayer({\n        id: \"cluster-count\",\n        type: \"symbol\",\n        source: \"locations\",\n        filter: [\"has\", \"point_count\"],\n        layout: {\n          \"text-field\": \"{point_count_abbreviated}\",\n          \"text-font\": [\"DIN Offc Pro Medium\", \"Arial Unicode MS Bold\"],\n          \"text-size\": 12,\n        },\n      });\n\n      map.addLayer({\n        id: \"unclustered-point\",\n        type: \"circle\",\n        source: \"locations\",\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        paint: {\n          \"circle-color\": \"rgba(8, 183, 241, 1)\",\n          \"circle-radius\": 20,\n        },\n      });\n\n      map.addLayer({\n        id: \"unclustered-count\",\n        type: \"symbol\",\n        source: \"locations\",\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        layout: {\n          \"text-field\": \"1\",\n          \"text-font\": [\"DIN Offc Pro Medium\", \"Arial Unicode MS Bold\"],\n          \"text-size\": 12,\n        },\n      });\n\n      map.on(\"zoomstart\", function () {\n        spiderifier.unspiderfy();\n      });\n\n      $ui.on(\"change\", \"input, select\", function () {\n        getFilterValues(config);\n        updateSource(data);\n        filterDataTable();\n      });\n\n      map.on(\"click\", \"clusters\", function (e) {\n        if (e.originalEvent.srcElement.className === \"spider-point-circle\") {\n          return;\n        }\n\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [\"clusters\"],\n        });\n        const clusterId = features[0].properties.cluster_id;\n        map\n          .getSource(\"locations\")\n          .getClusterExpansionZoom(clusterId, function (err, zoom) {\n            if (err) return;\n            if (map.getZoom() !== 13) {\n              map.easeTo({\n                center: features[0].geometry.coordinates,\n                zoom: zoom,\n              });\n            }\n          });\n\n        if (!features.length || map.getZoom() !== 13) {\n          return;\n        } else {\n          map\n            .getSource(\"locations\")\n            .getClusterLeaves(clusterId, 100, 0, function (err, leafFeatures) {\n              if (err) {\n                return console.error(\"problem with leaf features\", err);\n              }\n              let markers = leafFeatures.map(function (leafFeature) {\n                return leafFeature.properties;\n              });\n              spiderifier.spiderfy(features[0].geometry.coordinates, markers);\n            });\n        }\n      });\n\n      // When a click event occurs on a feature in\n      // the unclustered-point layer, open a popup at\n      // the location of the feature, with\n      // description HTML from its properties.\n      map.on(\"click\", \"unclustered-point\", function (e) {\n        const coordinates = e.features[0].geometry.coordinates.slice();\n        let content = \"<h4>\" + e.features[0].properties.Tribe + \"</h4>\";\n        content += \"<h5>\" + e.features[0].properties.Project + \"</h5>\";\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML(content).addTo(map);\n      });\n    });\n  }\n\n  function countMarkersFromState(state, dataarray) {\n    let count = 0;\n    dataarray.forEach((point) => {\n      if (point.State === state) count++;\n    });\n    $(\"#count-alaska\").text(count);\n    //console.log('found '+ arr.length + ' markers from ' + state)\n  }\n\n  /**\n   * Zoom the map to show all markers if there are any.\n   */\n  function zoomMapBounds(features, cfg) {\n    let bounds = new mapboxgl.LngLatBounds();\n\n    features.forEach(function (feature) {\n      bounds.extend(feature.geometry.coordinates);\n    });\n    if (features.length) {\n      map.fitBounds(bounds, { maxZoom: 5, padding: 100 });\n    } else {\n      map.easeTo({\n        center: cfg.mapCenter,\n        zoom: cfg.mapZoom,\n      });\n      alert(\"No projects fit the criteria.\");\n    }\n  }\n\n  /**\n   * clearMarkers - remove the marker layer from the map\n   * @param  {object} markerLayer\n   */\n  function clearMarkers(markerLayer) {\n    if (markerLayer !== undefined) {\n      map.removeLayer(markerLayer);\n    } else {\n      console.log(\"Marker layer was undefined. Nothing to remove.\");\n    }\n  }\n\n  /**\n   * filterData - find a value within an object's keys\n   * @param  {object} feature\n   * @param  {object} filters\n   * @return {boolean} true if the feature matches\n   */\n  function filterData(feature, filters) {\n    let bln = true;\n\n    Object.keys(filters).forEach((filter) => {\n      let props;\n\n      if (feature.properties[filter]) {\n        props = feature.properties[filter].split(\",\"); // convert comma separated string to array\n\n        bln = bln && matches(props, filters[filter]);\n      }\n    });\n\n    return bln;\n  }\n\n  /**\n   * matches - check if any of the criteria match our properties\n   *\n   * @param  {array} needles list of properties of an object\n   * @param  {array} haystack array containing a list of criteria we're looking for\n   *\n   * @return {boolean} true if any of needles are in haystack\n   */\n  function matches(needles, haystack) {\n    let ismatch;\n\n    ismatch = haystack.length\n      ? haystack.some((option) => needles.indexOf(option) >= 0)\n      : true;\n    // if ( haystack.length ) {\n    //   ismatch   = haystack.some( option => needles.indexOf( option ) >= 0 )\n    // }\n\n    return ismatch;\n  }\n\n  /**\n   * escapeRegExp - make a string safe for use as a regular expression\n   * @param  {string} str input string\n   * @return {string}    string with special regex characters escaped\n   */\n  function escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n  }\n\n  /**\n   * filterDataTable - use datatables search/filter function to filter the table\n   * @param  {[type]} terms [description]\n   *\n   */\n  function filterDataTable() {\n    Object.keys(config.uiFilters).forEach((filter) => {\n      let idx = config.dataHeaders.indexOf(filter);\n\n      // build out regex terms that match the word/phrase exactly\n      // eg don't let \"other\" match \"geothermal\"\n      // and escape out control characters\n      let terms = config.uiFilters[filter].map((val) => {\n        val = escapeRegExp(val);\n        return `^${val}$`;\n      });\n\n      // convert array to pipe-separated string for regex search\n      let regexterms = terms.join(\"|\");\n\n      datatable.column(idx).search(regexterms, true, false);\n    });\n\n    datatable.draw();\n  }\n\n  /**\n   * \tEvent handler for Alaska UI button\n   */\n  $(\".map-navigation\").on(\"click\", \"a\", function (e) {\n    e.preventDefault();\n\n    const pos = $(e.delegateTarget).children().data(\"position\");\n    if (pos) {\n      const loc = pos.split(\",\").reverse();\n\n      map.easeTo({\n        center: loc,\n        zoom: 3,\n      });\n    }\n  });\n})();\n","// geojson.js - v0.2.1\n// (c) 2015 Casey Thomas, MIT License \n!function(a){function b(a,b){var c=a||{};for(var d in b)b.hasOwnProperty(d)&&!c[d]&&(c[d]=b[d]);return c}function c(a,b){if(b.crs&&(a.crs={type:\"name\",properties:{name:b.crs}}),b.bbox&&(a.bbox=b.bbox),b.extraGlobal){a.properties={};for(var c in b.extraGlobal)a.properties[c]=b.extraGlobal[c]}}function d(a){a.geom={};for(var b in a)a.hasOwnProperty(b)&&-1!==j.indexOf(b)&&(a.geom[b]=a[b],delete a[b]);e(a.geom)}function e(a){for(var b in a)a.hasOwnProperty(b)&&(\"string\"==typeof a[b]?k.push(a[b]):\"object\"==typeof a[b]&&(k.push(a[b][0]),k.push(a[b][1])));if(0===k.length)throw new Error(\"No geometry attributes specified\")}function f(a,b,c){var d={type:\"Feature\"};return d.geometry=g(a,b),d.properties=c.call(a),d}function g(a,b){var c={};for(var d in b.geom){var e=b.geom[d];\"string\"==typeof e&&a.hasOwnProperty(e)?(c.type=d,c.coordinates=a[e]):Array.isArray(e)&&a.hasOwnProperty(e[0])&&a.hasOwnProperty(e[1])&&(c.type=d,c.coordinates=[a[e[1]],a[e[0]]])}return c}function h(a){var b;return a.exclude||a.include?a.include?b=function(b){a.include.forEach(function(a){b[a]=this[a]},this)}:a.exclude&&(b=function(b){for(var c in this)this.hasOwnProperty(c)&&-1===k.indexOf(c)&&-1===a.exclude.indexOf(c)&&(b[c]=this[c])}):b=function(a){for(var b in this)this.hasOwnProperty(b)&&-1===k.indexOf(b)&&(a[b]=this[b])},function(){var c={};return b.call(this,c),a.extra&&i(c,a.extra),c}}function i(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}a.version=\"0.2.0\",a.defaults={},a.parse=function(a,e,g){var i,j={type:\"FeatureCollection\",features:[]},l=b(e,this.defaults);return k.length=0,d(l),i=h(l),a.forEach(function(a){j.features.push(f(a,l,i))}),c(j,l),g&&\"function\"==typeof g?void g(j):j};var j=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],k=[]}(\"object\"==typeof module?module.exports:window.GeoJSON={});","export default function MapboxglSpiderifier(map, userOptions) {\n  var util = {\n    each: eachFn,\n    map: mapFn,\n    mapTimes: mapTimesFn,\n    eachTimes: eachTimesFn,\n  };\n  var NULL_FUNCTION = function () {};\n  var options = {\n    animate: true, // to animate the spiral\n    animationSpeed: 30, // animation speed in milliseconds\n    customPin: false, // If false, sets a default icon for pins in spider legs.\n    initializeLeg: NULL_FUNCTION,\n    onClick: NULL_FUNCTION,\n    // --- <SPIDER TUNING Params>\n    // circleSpiralSwitchover: show spiral instead of circle from this marker count upwards\n    //                        0 -> always spiral; Infinity -> always circle\n    circleSpiralSwitchover: 9,\n    circleFootSeparation: 65, // related to circumference of circle\n    spiralFootSeparation: 50, // related to size of spiral (experiment!)\n    spiralLengthStart: 40, // ditto\n    spiralLengthFactor: 8, // ditto\n    // ---\n  };\n  var twoPi = Math.PI * 2;\n  var previousSpiderLegs = [];\n\n  for (var attrname in userOptions) {\n    options[attrname] = userOptions[attrname];\n  }\n\n  // Public:\n  this.spiderfy = spiderfy;\n  this.unspiderfy = unspiderfy;\n  this.each = function (callback) {\n    util.each(previousSpiderLegs, callback);\n  };\n\n  // Private:\n  function spiderfy(latLng, features) {\n    var spiderLegParams = generateSpiderLegParams(features.length);\n    var spiderLegs;\n\n    unspiderfy();\n\n    spiderLegs = util.map(features, function (feature, index) {\n      var spiderLegParam = spiderLegParams[index];\n      var elements = createMarkerElements(spiderLegParam, feature);\n      var mapboxMarker;\n      var spiderLeg;\n      mapboxMarker = new mapboxgl.Marker(elements.container).setLngLat(latLng);\n\n      spiderLeg = {\n        feature: feature,\n        elements: elements,\n        mapboxMarker: mapboxMarker,\n        param: spiderLegParam,\n      };\n\n      options.initializeLeg(spiderLeg);\n\n      elements.container.onclick = function (e) {\n        options.onClick(e, spiderLeg);\n      };\n\n      return spiderLeg;\n    });\n\n    util.each(spiderLegs.reverse(), function (spiderLeg) {\n      spiderLeg.mapboxMarker.addTo(map);\n    });\n\n    if (options.animate) {\n      setTimeout(function () {\n        util.each(spiderLegs.reverse(), function (spiderLeg, index) {\n          spiderLeg.elements.container.className = (\n            spiderLeg.elements.container.className || \"\"\n          ).replace(\"initial\", \"\");\n          spiderLeg.elements.container.style[\"transitionDelay\"] =\n            (options.animationSpeed / 1000 / spiderLegs.length) * index + \"s\";\n        });\n      });\n    }\n\n    previousSpiderLegs = spiderLegs;\n  }\n\n  function unspiderfy() {\n    util.each(previousSpiderLegs.reverse(), function (spiderLeg, index) {\n      if (options.animate) {\n        spiderLeg.elements.container.style[\"transitionDelay\"] =\n          (options.animationSpeed / 1000 / previousSpiderLegs.length) * index +\n          \"s\";\n        spiderLeg.elements.container.className += \" exit\";\n        setTimeout(function () {\n          spiderLeg.mapboxMarker.remove();\n        }, options.animationSpeed + 100); //Wait for 100ms more before clearing the DOM\n      } else {\n        spiderLeg.mapboxMarker.remove();\n      }\n    });\n    previousSpiderLegs = [];\n  }\n\n  function generateSpiderLegParams(count) {\n    if (count >= options.circleSpiralSwitchover) {\n      return generateSpiralParams(count);\n    } else {\n      return generateCircleParams(count);\n    }\n  }\n\n  function generateSpiralParams(count) {\n    var legLength = options.spiralLengthStart,\n      angle = 0;\n    return util.mapTimes(count, function (index) {\n      var pt;\n      angle =\n        angle + (options.spiralFootSeparation / legLength + index * 0.0005);\n      pt = {\n        x: legLength * Math.cos(angle),\n        y: legLength * Math.sin(angle),\n        angle: angle,\n        legLength: legLength,\n        index: index,\n      };\n      legLength = legLength + (twoPi * options.spiralLengthFactor) / angle;\n      return pt;\n    });\n  }\n\n  function generateCircleParams(count) {\n    var circumference = options.circleFootSeparation * (2 + count),\n      legLength = circumference / twoPi, // = radius from circumference\n      angleStep = twoPi / count;\n\n    return util.mapTimes(count, function (index) {\n      var angle = index * angleStep;\n      return {\n        x: legLength * Math.cos(angle),\n        y: legLength * Math.sin(angle),\n        angle: angle,\n        legLength: legLength,\n        index: index,\n      };\n    });\n  }\n\n  function createMarkerElements(spiderLegParam) {\n    var containerElem = document.createElement(\"div\"),\n      pinElem = document.createElement(\"div\"),\n      lineElem = document.createElement(\"div\");\n\n    containerElem.className =\n      \"spider-leg-container\" + (options.animate ? \" animate initial \" : \" \");\n    lineElem.className = \"spider-leg-line\";\n    pinElem.className =\n      \"spider-leg-pin\" + (options.customPin ? \"\" : \" default-spider-pin\");\n\n    containerElem.appendChild(lineElem);\n    containerElem.appendChild(pinElem);\n\n    containerElem.style[\"margin-left\"] = spiderLegParam.x + \"px\";\n    containerElem.style[\"margin-top\"] = spiderLegParam.y + \"px\";\n\n    lineElem.style.height = spiderLegParam.legLength + \"px\";\n    // lineElem.style.transform = 'rotate(' + (2*Math.PI - spiderLegParam.angle) +'rad)';\n    lineElem.style.transform =\n      \"rotate(\" + (spiderLegParam.angle - Math.PI / 2) + \"rad)\";\n\n    return { container: containerElem, line: lineElem, pin: pinElem };\n  }\n\n  // Utility\n  function eachFn(array, iterator) {\n    var i = 0;\n    if (!array || !array.length) {\n      return [];\n    }\n    for (i = 0; i < array.length; i++) {\n      iterator(array[i], i);\n    }\n  }\n\n  function eachTimesFn(count, iterator) {\n    if (!count) {\n      return [];\n    }\n    for (var i = 0; i < count; i++) {\n      iterator(i);\n    }\n  }\n\n  function mapFn(array, iterator) {\n    var result = [];\n    eachFn(array, function (item, i) {\n      result.push(iterator(item, i));\n    });\n    return result;\n  }\n\n  function mapTimesFn(count, iterator) {\n    var result = [];\n    eachTimesFn(count, function (i) {\n      result.push(iterator(i));\n    });\n    return result;\n  }\n}\n\n// Returns Offset option for mapbox poup, so that the popup for pins in the spider\n// appears next to the pin, rather than at the center of the spider.\n// offset: <number> Offset of the popup from the pin.\nMapboxglSpiderifier.popupOffsetForSpiderLeg = function popupOffsetForSpiderLeg(\n  spiderLeg,\n  offset\n) {\n  var pinOffsetX = spiderLeg.param.x;\n  var pinOffsetY = spiderLeg.param.y;\n\n  offset = offset || 0;\n  return {\n    top: offsetVariant([0, offset], pinOffsetX, pinOffsetY),\n    \"top-left\": offsetVariant([offset, offset], pinOffsetX, pinOffsetY),\n    \"top-right\": offsetVariant([-offset, offset], pinOffsetX, pinOffsetY),\n    bottom: offsetVariant([0, -offset], pinOffsetX, pinOffsetY),\n    \"bottom-left\": offsetVariant([offset, -offset], pinOffsetX, pinOffsetY),\n    \"bottom-right\": offsetVariant([-offset, -offset], pinOffsetX, pinOffsetY),\n    left: offsetVariant([offset, -offset], pinOffsetX, pinOffsetY),\n    right: offsetVariant([-offset, -offset], pinOffsetX, pinOffsetY),\n  };\n};\n\nfunction offsetVariant(offset, variantX, variantY) {\n  return [offset[0] + (variantX || 0), offset[1] + (variantY || 0)];\n}\n"]}